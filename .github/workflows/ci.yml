name: controller-ci
on:
  push:
    branches:
      - main
      - develop
      - final_push_to_public_fleet
      - experimental
  schedule:
    - cron:  '50 09 * * *'

jobs:
  # Label of the runner job
  runner-job:
    # You must use a Linux environment when using service containers or container jobs
    runs-on: ubuntu-latest

    # Service containers to run with `runner-job`
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432
    strategy:
      matrix:
        node-version: [10.x, 12.x, 14.x, 15.x, 16.x]
        activemq-version: [5.11.0, 5.12.0, 5.13.0, 5.14.0, 5.15.0, 5.16.5, 5.17.2, 5.17.3, 5.17.4]

    steps:
      # Downloads a copy of the code in your repository before running CI tests
      - name: Check out repository code
        uses: actions/checkout@v2

      # Performs a clean installation of ActiveMQ
      - name: "Install ActiveMQ ${{matrix.activemq-version}}"
        run: |
          # SUDDENLY THIS ERRORS OUT sudo apt update -y -q > /dev/null 2> /dev/null
          sudo apt-get install -y -q default-jre > /dev/null 2> /dev/null
          npm install >/dev/null 2> /dev/null
          wget https://archive.apache.org/dist/activemq/${{matrix.activemq-version}}/apache-activemq-${{matrix.activemq-version}}-bin.tar.gz
          ls -al *.gz
          tar zxf apache-activemq-${{matrix.activemq-version}}-bin.tar.gz
          rm ./apache-activemq-${{matrix.activemq-version}}-bin.tar.gz
          echo 'calling ./apache-activemq-${{matrix.activemq-version}}/bin/activemq start'
          echo 'JAVA_HOME = {JAVA_HOME}'
          echo 'JAVACMD = {JAVACMD}'
          ./apache-activemq-${{matrix.activemq-version}}/bin/activemq start
        working-directory: server

      - name: Setup PostgreSQL
        # Creates the DB schema and loads initial table data
        run: |
          sudo psql -h localhost -p 5432 -c "CREATE DATABASE bubbles_ci" "user=postgres dbname=postgres password=postgres"
          sudo psql -h localhost -p 5432 -a -q -f migrations/00000001_bu.up.sql  "user=postgres dbname=bubbles_ci password=postgres"
          sudo psql -h localhost -p 5432 -a -q -f migrations/00000002_bu.up.sql  "user=postgres dbname=bubbles_ci password=postgres"
          sudo psql -h localhost -p 5432 -a -q -f migrations/00000003_bu.up.sql  "user=postgres dbname=bubbles_ci password=postgres"
          sudo psql -h localhost -p 5432 -a -q -f migrations/00000004_bu.up.sql  "user=postgres dbname=bubbles_ci password=postgres"
          sudo psql -h localhost -p 5432 -a -q -f migrations/00000005_bu.up.sql  "user=postgres dbname=bubbles_ci password=postgres"
          sudo psql -h localhost -p 5432 -a -q -f migrations/00000006_bu.up.sql  "user=postgres dbname=bubbles_ci password=postgres"
          sudo psql -h localhost -p 5432 -a -q -f migrations/00000007_bu.up.sql  "user=postgres dbname=bubbles_ci password=postgres"
          sudo psql -h localhost -p 5432 -a -q -f migrations/00000008_bu.up.sql  "user=postgres dbname=bubbles_ci password=postgres"
          sudo psql -h localhost -p 5432 -a -q -f migrations/00000009_bu.up.sql  "user=postgres dbname=bubbles_ci password=postgres"
          sudo psql -h localhost -p 5432 -a -q -f migrations/00000010_bu.up.sql  "user=postgres dbname=bubbles_ci password=postgres"
          sudo psql -h localhost -p 5432 -a -q -f migrations/00000011_bu.up.sql  "user=postgres dbname=bubbles_ci password=postgres"
          sudo psql -h localhost -p 5432 -a -q -f migrations/00000012_bu.up.sql  "user=postgres dbname=bubbles_ci password=postgres"
          sudo psql -h localhost -p 5432 -a -q -f migrations/00000013_bu.up.sql  "user=postgres dbname=bubbles_ci password=postgres"
          sudo psql -h localhost -p 5432 -a -q -f migrations/00000014_bu.up.sql  "user=postgres dbname=bubbles_ci password=postgres"
          sudo psql -h localhost -p 5432 -a -q -f migrations/00000015_bu.up.sql  "user=postgres dbname=bubbles_ci password=postgres"
          sudo psql -h localhost -p 5432 -a -q -f migrations/00000016_bu.up.sql  "user=postgres dbname=bubbles_ci password=postgres"
          sudo psql -h localhost -p 5432 -a -q -f migrations/00000017_bu.up.sql  "user=postgres dbname=bubbles_ci password=postgres"
          sudo psql -h localhost -p 5432 -a -q -f migrations/00000018_bu.up.sql  "user=postgres dbname=bubbles_ci password=postgres"
          sudo psql -h localhost -p 5432 -a -q -f migrations/00000019_bu.up.sql  "user=postgres dbname=bubbles_ci password=postgres"
          sudo psql -h localhost -p 5432 -a -q -f migrations/00000020_bu.up.sql  "user=postgres dbname=bubbles_ci password=postgres"
          sudo psql -h localhost -p 5432 -a -q -f migrations/00000021_bu.up.sql  "user=postgres dbname=bubbles_ci password=postgres"
          sudo psql -h localhost -p 5432 -a -q -f migrations/00000022_bu.up.sql  "user=postgres dbname=bubbles_ci password=postgres"
          sudo psql -h localhost -p 5432 -a -q -f migrations/00000023_bu.up.sql  "user=postgres dbname=bubbles_ci password=postgres"
          sudo psql -h localhost -p 5432 -a -q -f migrations/00000024_bu.up.sql  "user=postgres dbname=bubbles_ci password=postgres"
          sudo psql -h localhost -p 5432 -a -q -f migrations/00000025_bu.up.sql  "user=postgres dbname=bubbles_ci password=postgres"
          sudo psql -h localhost -p 5432 -a -q -f migrations/00000026_bu.up.sql  "user=postgres dbname=bubbles_ci password=postgres"
          sudo psql -h localhost -p 5432 -a -q -f migrations/00000027_bu.up.sql  "user=postgres dbname=bubbles_ci password=postgres"
          sudo psql -h localhost -p 5432 -a -q -f migrations/00000028_bu.up.sql  "user=postgres dbname=bubbles_ci password=postgres"
          sudo psql -h localhost -p 5432 -a -q -f migrations/00000029_bu.up.sql  "user=postgres dbname=bubbles_ci password=postgres"
          sudo psql -h localhost -p 5432 -a -q -f migrations/00000030_bu.up.sql  "user=postgres dbname=bubbles_ci password=postgres"
          sudo psql -h localhost -p 5432 -a -q -f migrations/00000031_bu.up.sql  "user=postgres dbname=bubbles_ci password=postgres"
          sudo psql -h localhost -p 5432 -a -q -f migrations/00000032_bu.up.sql  "user=postgres dbname=bubbles_ci password=postgres"
          sudo psql -h localhost -p 5432 -a -q -f migrations/00000033_bu.up.sql  "user=postgres dbname=bubbles_ci password=postgres"
          sudo psql -h localhost -p 5432 -a -q -f migrations/00000034_bu.up.sql  "user=postgres dbname=bubbles_ci password=postgres"
          sudo psql -h localhost -p 5432 -a -q -f migrations/00000035_bu.up.sql  "user=postgres dbname=bubbles_ci password=postgres"
          sudo psql -h localhost -p 5432 -a -q -f migrations/00000036_bu.up.sql  "user=postgres dbname=bubbles_ci password=postgres"
          sudo psql -h localhost -p 5432 -a -q -f migrations/00000037_bu.up.sql  "user=postgres dbname=bubbles_ci password=postgres"
        env:
          # The hostname used to communicate with the PostgreSQL service container
          POSTGRES_HOST: localhost
          # The default PostgreSQL port
          POSTGRES_PORT: 5432
          NODE_ENV: CI
        working-directory: server


      - name: Run tests with coverage AND running servers
        # Runs a script that creates a PostgreSQL client, populates
        # the client with data, and retrieves data
        # run: node client.js
        run: |
          cp config_ci.json config.json
          npm run coverage_without_servers
          node src/queue-server.js&
          node src/ws-server.js&
          node src/api-server.js&
          npm run coverage
          bash <(curl -s https://codecov.io/bash) -t 74df7017-8e3b-462c-bb26-f99316613466 -v
        # Environment variables used by the app script to create
        # a new PostgreSQL client.
        env:
          # The hostname used to communicate with the PostgreSQL service container
          POSTGRES_HOST: localhost
          # The default PostgreSQL port
          POSTGRES_PORT: 5432
          NODE_ENV: CI
        working-directory: server

