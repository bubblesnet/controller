FROM balenalib/%%BALENA_MACHINE_NAME%%-node:16.15-buster-run

# Dockerfile boilerplate - certs and timezone
COPY ca-certificates.crt /etc/ssl/certs/
RUN ln -sf /usr/share/zoneinfo/US/Eastern /etc/localtime

ENV UDEV=on

# RUN apt-get update and install
RUN apt-get update && apt-get install -y apt-transport-https && install_packages vim postgresql-client inetutils-telnet exfat-fuse exfat-utils

# install migrate tool
RUN curl -L https://github.com/golang-migrate/migrate/releases/download/v4.15.2/migrate.linux-armv7.tar.gz | tar xvz && chmod +x migrate

# COPY usb drive handling rules and scripts over, but let the startserver script put them in place
COPY usb.rules /server/usb/usb.rules
COPY scripts /server/usb/scripts
COPY start_container_specific_server.sh /
COPY startservers_api.sh /
COPY startservers_queue.sh /
COPY startservers_websocket.sh /

# FIX PERMISSIONS ON SCRIPTS
RUN chmod +x /server/usb/scripts/*.sh && chmod +x /start_container_specific_server.sh && chmod +x /startservers_api.sh && chmod +x /startservers_queue.sh && chmod +x /startservers_websocket.sh

COPY migrations /go/migrations
COPY conf/postgresql.conf /go/conf/postgresql.conf
COPY conf/pg_hba.conf /go/conf/pg_hba.conf
COPY src /server/src
COPY package.json /server
COPY package-lock.json /server
COPY config_ci.json /server
COPY config_pi.json /server
COPY config_test.json /server
COPY config_dev.json /server
COPY config_prod.json /server/config.json
WORKDIR /server
RUN npm install

CMD cp /server/config.json /config
CMD cd /
CMD /start_container_specific_server.sh
# CMD ["bash"]
